/**
*	Set Child shipping addressr
*
*	@author Agnislav Onufrijchuk, Astound Commerce
*	@version 1.0
*   @input Basket : dw.order.Basket
*   @input ChildId : String
*   @output ErrorMessage : String 
*
*/
importPackage( dw.order );
importPackage( dw.system );
importPackage( dw.util );

importScript("vp/LibVirtualPiggy.ds");
importScript("vp/LibShipping.ds");

var VP : Object = null;

function execute( args : PipelineDictionary ) : Number {
	var basket = args.Basket;
	var childId : String = args.ChildId;
	
	VP = VirtualPiggyObject();
	
	if (!VP || VP == null || basket == null) {
		return PIPELET_ERROR;
	}
	
	var childAddress : HashMap;
	try{		
		childAddress = VP.getParentChildAddress(session.custom.vpUserToken, childId);
	} catch(e){
		Logger.error("SetChildsAddressToShipping.ds: " + e.message);
		return PIPELET_ERROR;
	}
	
	if(!empty(childAddress.status) && childAddress.status == false){
		Logger.error("SetChildsAddressToShipping.ds: " + childAddress.errorMessage);
		args.ErrorMessage = childAddress.errorMessage;
		return PIPELET_ERROR;
	}	
	
	var shippingMethodID : String = VP.utils.getShippingMethodID();
	var result : Number = prepareShipment(basket, childAddress, shippingMethodID);
		
	session.custom.vpManualCapture = VP.utils.isManualCapture();
	
	// remove existing payment methods from the basket
	removeExistingPaymentInstruments( basket );

	// create a payment instrument for Virtual Piggy
	basket.createPaymentInstrument( "VIRTUAL_PIGGY", basket.totalGrossPrice );
	
	return result;
}