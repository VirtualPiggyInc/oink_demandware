/**
*	Prepare checkout for order
*
*	@author Agnislav Onufrijchuk, Astound Commerce
*	@version 1.0
*   @input Basket : dw.order.Basket
*   @input IsChild : Boolean
*	@output response: dw.util.HashMap
*
*/
importPackage( dw.order );
importPackage( dw.system );
importPackage( dw.util );

importScript("vp/LibVirtualPiggy.ds");

var VP : Object = null;

function execute( args : PipelineDictionary ) : Number {

	VP = VirtualPiggyObject();
	if (!VP || VP == null) {
		return PIPELET_ERROR;
	}

	var basket = args.Basket;
	var isChild : Boolean = args.IsChild;
	var address : HashMap;
	
	if(isChild){
		address = VP.getChildAddress(session.custom.vpUserToken);
	} else {
		address = VP.getParentAddress(session.custom.vpUserToken);
	}
	
	if (address.status)
	{	
		var shippingMethodID : String = VP.utils.getShippingMethodID();
		var result : Number = prepareShipment(basket, address, shippingMethodID);
		
		session.custom.vpManualCapture = VP.utils.isManualCapture();
		
		return result;
	}
	else
	{
		args.response = address;
		return PIPELET_ERROR;
	}
}

function prepareShipment(basket : Basket, address : HashMap, shippingMethodID : String) {
	
	var shippingAddress : OrderAddress = prepareShippingAddress(basket, address);	
	var shipment : dw.order.Shipment = basket.defaultShipment;	
	var shippingMethod : dw.order.ShippingMethod = null;
	
	// Determine the list of applicable shipping methods.
	var shippingModel : ShipmentShippingModel = ShippingMgr.getShipmentShippingModel(shipment);
	var shippingMethods : Collection = shippingModel.getApplicableShippingMethods(address);

	// 1) Try to set the shipment shipping method to the passed one.
	var shippingMethodsIter : Iterator = shippingMethods.iterator();
	while( shippingMethodsIter.hasNext() ) 	{
		var method : ShippingMethod = shippingMethodsIter.next();
		if( !method.ID.equals( shippingMethodID ) ) continue;

		
		// set this shipping method
		shipment.setShippingMethod( method );
		return PIPELET_NEXT;
	}

	return PIPELET_ERROR;
}

function prepareShippingAddress(basket : Basket, address : HashMap) {
	var shippingAddress : OrderAddress = basket.defaultShipment.createShippingAddress();
	shippingAddress.setFirstName( address.firstName );
	shippingAddress.setLastName( address.lastName );
	shippingAddress.setAddress1( address.address );
	shippingAddress.setCity( address.city );
	shippingAddress.setPostalCode( address.zip );
	shippingAddress.setStateCode( address.state );
	shippingAddress.setCountryCode( address.country );
	shippingAddress.setPhone( address.parentPhone );
	
	//shippingAddress.copyTo( basket.billingAddress );
	
	var billingAddress : OrderAddress = basket.billingAddress;
	billingAddress.setFirstName( address.firstName );
	billingAddress.setLastName( address.lastName );
	billingAddress.setAddress1( address.address );
	billingAddress.setCity( address.city );
	billingAddress.setPostalCode( address.zip );
	billingAddress.setStateCode( address.state );
	billingAddress.setCountryCode( address.country );
	billingAddress.setPhone( address.parentPhone );		
	basket.setCustomerName(address.name);
	basket.setCustomerEmail(address.parentEmail);

	
	return shippingAddress;
}