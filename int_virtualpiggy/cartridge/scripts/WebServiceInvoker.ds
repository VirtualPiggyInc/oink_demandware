importPackage(dw.system);
/**
*	This script invokes WebServcie using ConfigMgr
*
*/

importScript("WebServiceConfigMgr.ds");

var _globalObject = this,
	_serviceCache = {}; 

function WebServiceInvoker() {};

(function () {	
	function getService(serviceName) {
		var service = _serviceCache[serviceName];
		if (!service) {					
			importScript("services/" + serviceName + "WebService.ds");
			service = _globalObject[serviceName + "WebService"]();
			_serviceCache[serviceName] = service;
		};
		return service;		
	};
	
	WebServiceInvoker.invoke = function (serviceName, methodName) {
		var service = getService(serviceName),
			methodArgs = Array.prototype.slice.call(arguments, 2);
	
		service.config = WebServiceConfigMgr.getConfig(serviceName);
		
		try {
			if (methodArgs) {
				return (service[methodName]).apply(service, methodArgs);
			} else {
				return (service[methodName]).apply(service);
			};
		} catch (e) {
			throw e;
		}
	};

	return WebServiceInvoker;
})();