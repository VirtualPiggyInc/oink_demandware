<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>All - test configuration</description>
        </text-node>
        <node-display x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="All">
    <segment>
      <node>
        <start-node call-mode="private" name="All" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="vp/VirtualPiggyWebServiceTest.ds"/>
          <config-property key="Timeout" value="120"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="TestResult" key="TestResult"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="virtualpiggy/testresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestEncryption">
    <segment>
      <node>
        <start-node call-mode="public" name="TestEncryption" secure="false"/>
        <node-display x="4" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="vp/TestProcessTransaction.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="CurrentSession.custom.vpApprovalStatus" key="ApprovalStatus"/>
          <key-binding alias="CurrentSession.custom.vpTransactionId" key="TransactionId"/>
          <key-binding alias="CurrentSession.custom.vpTempAccountNumber" key="AccountNumber"/>
          <key-binding alias="CurrentSession.custom.vpExpirationDate" key="ExpirationDate"/>
          <key-binding alias="CurrentSession.custom.vpConfirmation" key="Confirmation"/>
          <key-binding alias="CheckoutError" key="ErrorMessage"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="CurrentForms.vpparentcheckout.childrenList.value" key="ChildId"/>
          <key-binding alias="CurrentForms.vpparentcheckout.paymentAccounts.value" key="PaymentInputId"/>
          <key-binding alias="OrderNo" key="OrderNo"/>
          <key-binding alias="CurrentSession.custom.vpAccountNumber" key="TestAccountNumber"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
